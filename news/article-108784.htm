<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://nekoboxnode.github.io/news/article-108784.htm" />
    <meta charset="utf-8">
    <title>RecyclerView单层RecyclerView实现点击展开、折叠效果</title>
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
        <meta name="description" content="最近有RecyclerView点击展开、折叠item的需求，其中一种写法是利用两个RecyclerView实现，但这样效率不高。因此采用单层RecyclerView来实现此需求。 1 定义两个布局it" />
    
    <!-- Favicon -->
    <link href="/assets/website/img/nekoboxnode/favicon.ico" rel="icon">

    <meta name="author" content="NekoBoxNode官网节点站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://nekoboxnode.github.io/news/article-108784.htm" />
    <meta property="og:site_name" content="NekoBoxNode官网节点站" />
    <meta property="og:title" content="RecyclerView单层RecyclerView实现点击展开、折叠效果" />
    <meta property="og:image" content="https://nekoboxnode.github.io/uploads/20240427/06dfe01c5c4739f65482d45bb15d872e.webp" />
        <meta property="og:release_date" content="2025-05-01T09:03:04" />
    <meta property="og:updated_time" content="2025-05-01T09:03:04" />
        <meta property="og:description" content="最近有RecyclerView点击展开、折叠item的需求，其中一种写法是利用两个RecyclerView实现，但这样效率不高。因此采用单层RecyclerView来实现此需求。 1 定义两个布局it" />
    
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="RecyclerView单层RecyclerView实现点击展开、折叠效果">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
        
    <!-- Google Web Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600&family=Ubuntu:wght@500;700&display=swap"
        rel="stylesheet">

    <!-- Icon Font Stylesheet -->
    <link href="https://cdn.bootcdn.net/ajax/libs/font-awesome/5.10.0/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.bootcdn.net/ajax/libs/bootstrap-icons/1.4.1/font/bootstrap-icons.css" rel="stylesheet">

    <!-- Libraries Stylesheet -->
    <link href="/assets/website/js/frontend/nekoboxnode/lib/animate/animate.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/nekoboxnode/lib/owlcarousel/assets/owl.carousel.min.css" rel="stylesheet">

    <!-- Customized Bootstrap Stylesheet -->
    <link href="/assets/website/css/nekoboxnode/bootstrap.min.css" rel="stylesheet">

    <!-- Template Stylesheet -->
    <link href="/assets/website/css/nekoboxnode/style.css" rel="stylesheet">
    <link rel="stylesheet" href="/assets/website/css/G.css" />
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-93Z2TV5VL1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-93Z2TV5VL1');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <!-- Spinner Start -->
    <div id="spinner"
        class="show bg-white position-fixed translate-middle w-100 vh-100 top-50 start-50 d-flex align-items-center justify-content-center">
        <div class="spinner-grow text-primary" style="width: 3rem; height: 3rem;" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
    <!-- Spinner End -->


        <!-- Navbar Start -->
    <div class="container-fluid sticky-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-dark p-0">
                <a href="/" class="navbar-brand">
                                <span>Neko Box Node</span>
                                </a>
                <button type="button" class="navbar-toggler ms-auto me-0" data-bs-toggle="collapse"
                    data-bs-target="#navbarCollapse">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarCollapse">
                    <div class="navbar-nav ms-auto">
                                                <a href="/" class="nav-item nav-link">首页</a>
                                                <a href="/free-nodes/" class="nav-item nav-link">免费节点</a>
                                                <a href="/paid-subscribe/" class="nav-item nav-link">推荐机场</a>
                                                <a href="/client.htm" class="nav-item nav-link">客户端</a>
                                                <a href="/news/" class="nav-item nav-link">新闻资讯</a>
                                            </div>
                </div>
            </nav>
        </div>
    </div>
    <!-- Navbar End -->


    <!-- Hero Start -->
    <div class="container-fluid pt-5 bg-primary hero-header">
        <div class="container pt-5">
            <div class="row g-5 pt-5">
                <div class="col-lg-6 align-self-center text-center text-lg-start mb-lg-5">
                    <h1 class="text-white mb-4 animated slideInRight">RecyclerView单层RecyclerView实现点击展开、折叠效果</h1>
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb justify-content-center justify-content-lg-start mb-0">
                            <li class="breadcrumb-item"><a class="text-white" href="/" title="首页">首页</a></li>
                            <li class="breadcrumb-item"><a class="text-white" href="/news/" title="新闻资讯">新闻资讯</a></li>
                            <li class="breadcrumb-item text-white active" aria-current="page">正文</li>
                        </ol>
                    </nav>
                </div>
                <div class="col-lg-6 align-self-end text-center text-lg-end">
                    <img class="img-fluid" href="/assets/website/img/nekoboxnode/hero-img.png" alt="" style="max-height: 300px;">
                </div>
            </div>
        </div>
    </div>
    <!-- Hero End -->


    <!-- Full Screen Search Start -->
    <div class="modal fade" id="searchModal" tabindex="-1">
        <div class="modal-dialog modal-fullscreen">
            <div class="modal-content" style="background: rgba(20, 24, 62, 0.7);">
                <div class="modal-header border-0">
                    <button type="button" class="btn btn-square bg-white btn-close" data-bs-dismiss="modal"
                        aria-label="Close"></button>
                </div>
                <div class="modal-body d-flex align-items-center justify-content-center">
                    <div class="input-group" style="max-width: 600px;">
                        <input type="text" class="form-control bg-transparent border-light p-3"
                            placeholder="Type search keyword">
                        <button class="btn btn-light px-4"><i class="bi bi-search"></i></button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Full Screen Search End -->


    <!-- About Start -->
    <div class="container-fluid py-5">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                <div class="xcblog-blog-detail xcblog-blog-detail-defined">
                      				  				  				<div id="content_views" class="markdown_views prism-github-gist"> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220722/9be7b0dfb3be6af2eaea06d02e51c1a3.jpg" alt="RecyclerView单层RecyclerView实现点击展开、折叠效果"></p> <p>最近有RecyclerView点击展开、折叠item的需求，其中一种写法是利用两个RecyclerView实现，但这样效率不高。因此采用单层RecyclerView来实现此需求。</p> <h2>1 定义两个布局item的结构，Adapter的数据源为两种item组装成的集合</h2> <h4>1.1 子item:ChildBookItem</h4> <p>简单起见，只展示一个bookName</p> <pre><code class="prism language-java"><span class="token keyword">private</span> String bookName<span class="token punctuation">;</span></code></pre> <h4>1.2 父item:CategoryItem</h4> <pre><code class="prism language-java"><span class="token keyword">private</span><span class="token keyword">int</span> index<span class="token punctuation">;</span><span class="token keyword">private</span><span class="token keyword">boolean</span> isShow<span class="token punctuation">;</span><span class="token comment">// 展开状态</span><span class="token keyword">private</span> String categoryName<span class="token punctuation">;</span><span class="token keyword">private</span> List<span class="token generics function"><span class="token punctuation">&lt;</span>ChildBookItem<span class="token punctuation">&gt;</span></span> childBookItems<span class="token punctuation">;</span><span class="token comment">// 子item列表</span></code></pre> <blockquote> <p>index表示在item集合中此CategoryItem的位置（不算ChildBookItem的数量）；<br /> List childBookItems 是此Category在展开状态下所包含的子item集合，只用于记录对应关系，并不参与绘制UI。</p> </blockquote> <h2>2 组装数据</h2> <h4>2.1 获取数据源</h4> <pre><code class="prism language-java"><span class="token keyword">private</span> List<span class="token generics function"><span class="token punctuation">&lt;</span>BookShelf<span class="token punctuation">&gt;</span></span><span class="token function">initData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>          BookShelf bookShelf1<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">BookShelf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         bookShelf1<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"科幻类"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         String<span class="token punctuation">[</span><span class="token punctuation">]</span> books1<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{<!-- --></span><span class="token string">"三体"</span><span class="token punctuation">,</span><span class="token string">"流浪地球"</span><span class="token punctuation">,</span><span class="token string">"降临"</span><span class="token punctuation">}</span><span class="token punctuation">;</span>         bookShelf1<span class="token punctuation">.</span><span class="token function">setBooks</span><span class="token punctuation">(</span>Arrays<span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>books1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         mDatas<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>bookShelf1<span class="token punctuation">)</span><span class="token punctuation">;</span>          BookShelf bookShelf2<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">BookShelf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         bookShelf2<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"政治类"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         String<span class="token punctuation">[</span><span class="token punctuation">]</span> books2<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{<!-- --></span><span class="token string">"美国陷阱"</span><span class="token punctuation">,</span><span class="token string">"从赫鲁晓夫到普京"</span><span class="token punctuation">,</span><span class="token string">"为什么是以色列"</span><span class="token punctuation">,</span><span class="token string">"南京大屠杀"</span><span class="token punctuation">}</span><span class="token punctuation">;</span>         bookShelf2<span class="token punctuation">.</span><span class="token function">setBooks</span><span class="token punctuation">(</span>Arrays<span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>books2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         mDatas<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>bookShelf2<span class="token punctuation">)</span><span class="token punctuation">;</span>          BookShelf bookShelf3<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">BookShelf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         bookShelf3<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"文学类"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         String<span class="token punctuation">[</span><span class="token punctuation">]</span> books3<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{<!-- --></span><span class="token string">"我们仨"</span><span class="token punctuation">,</span><span class="token string">"小姨多鹤"</span><span class="token punctuation">,</span><span class="token string">"我与地坛"</span><span class="token punctuation">,</span><span class="token string">"黄金时代"</span><span class="token punctuation">,</span><span class="token string">"雪国"</span><span class="token punctuation">}</span><span class="token punctuation">;</span>         bookShelf3<span class="token punctuation">.</span><span class="token function">setBooks</span><span class="token punctuation">(</span>Arrays<span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>books3<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         mDatas<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>bookShelf3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> mDatas<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <h4>2.2 初始化组装item</h4> <p>由于初始不展示子item，所以不需要设置ChildBookItems的内容。此时定义的Adapter绑定的集合类型为Object，既包含CategoryItem，也包括ChildBookItem，所以不指定具体类型。</p> <pre><code class="prism language-java"><span class="token keyword">private</span> List<span class="token generics function"><span class="token punctuation">&lt;</span>Object<span class="token punctuation">&gt;</span></span> mList<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// item组装数据</span><span class="token keyword">private</span> List<span class="token generics function"><span class="token punctuation">&lt;</span>CategoryItem<span class="token punctuation">&gt;</span></span><span class="token function">initItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         List<span class="token generics function"><span class="token punctuation">&lt;</span>BookShelf<span class="token punctuation">&gt;</span></span> bookShelves<span class="token operator">=</span><span class="token function">initData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         List<span class="token generics function"><span class="token punctuation">&lt;</span>CategoryItem<span class="token punctuation">&gt;</span></span> items<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span> bookShelves<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>             BookShelf bookShelf<span class="token operator">=</span> bookShelves<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>              CategoryItem categoryItem<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">CategoryItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             categoryItem<span class="token punctuation">.</span><span class="token function">setIndex</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>             categoryItem<span class="token punctuation">.</span><span class="token function">setShow</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             categoryItem<span class="token punctuation">.</span><span class="token function">setCategoryName</span><span class="token punctuation">(</span>bookShelf<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             categoryItem<span class="token punctuation">.</span><span class="token function">setChildBookItems</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token class-name">ArrayList</span><span class="token generics function"><span class="token punctuation">&lt;</span>ChildBookItem<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             items<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>categoryItem<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> items<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220722/ab8e4050bc2012a18afbf4e10ac83389.jpg" alt="RecyclerView单层RecyclerView实现点击展开、折叠效果"><br /> 此时的items包含了三条数据，均为父item类型</p> <h4>2.3 根据item的不同，在Adapter中调用不同的ViewHolder</h4> <p>BookViewHolder与CategoryViewHolder均为继承BaseViewHolder的ViewHolder，可在两个文件中分别进行item相关UI展示。<br /> 下边为Adapter部分关键代码：</p> <pre><code class="prism language-java"><span class="token keyword">public</span> BaseViewHolder<span class="token function">onCreateViewHolder</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> ViewGroup viewGroup<span class="token punctuation">,</span><span class="token keyword">int</span> i<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">switch</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">case</span> TYPE_CATEGORY<span class="token operator">:</span><span class="token keyword">return</span><span class="token keyword">new</span><span class="token class-name">CategoryViewHolder</span><span class="token punctuation">(</span>LayoutInflater<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>viewGroup<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>layout_category_item<span class="token punctuation">,</span> viewGroup<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">case</span> TYPE_BOOK<span class="token operator">:</span><span class="token keyword">return</span><span class="token keyword">new</span><span class="token class-name">BookViewHolder</span><span class="token punctuation">(</span>LayoutInflater<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>viewGroup<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>layout_item_book<span class="token punctuation">,</span> viewGroup<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token keyword">return</span><span class="token keyword">new</span><span class="token class-name">BaseViewHolder</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token class-name">LinearLayout</span><span class="token punctuation">(</span>viewGroup<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">bindView</span><span class="token punctuation">(</span>List list<span class="token punctuation">,</span> Object obj<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span><span class="token keyword">int</span><span class="token function">getItemViewType</span><span class="token punctuation">(</span><span class="token keyword">int</span> position<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         Object obj<span class="token operator">=</span> mDatas<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>obj<span class="token keyword">instanceof</span><span class="token class-name">CategoryItem</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span> TYPE_CATEGORY<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token keyword">if</span><span class="token punctuation">(</span>obj<span class="token keyword">instanceof</span><span class="token class-name">ChildBookItem</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span> TYPE_BOOK<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">onBindViewHolder</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> BaseViewHolder baseViewHolder<span class="token punctuation">,</span><span class="token keyword">int</span> i<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         baseViewHolder<span class="token punctuation">.</span><span class="token function">bindView</span><span class="token punctuation">(</span>mDatas<span class="token punctuation">,</span> mDatas<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <h2>3 点击操作</h2> <h4>3.1 展开子item</h4> <blockquote> <p>mList.addAll(mSelectedPosition + 1, childBookItems)：将ChildBookItem集合加入到适配器绑定数据集合中，位置在刚刚点击的父item后一位；<br /> mSelectedPosition：为刚刚点击的父item的position；<br /> categoryItem.setChildBookItems(childBookItems)：确定父item与子item集合的对应关系，方便后边折叠item时候直接从mList中删除此集合。</p> </blockquote> <pre><code class="prism language-java"><span class="token comment">// 展开子item</span><span class="token keyword">private</span><span class="token keyword">void</span><span class="token function">addChildItems</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         List<span class="token generics function"><span class="token punctuation">&lt;</span>String<span class="token punctuation">&gt;</span></span> bookList<span class="token operator">=</span> mDatas<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBooks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         List<span class="token generics function"><span class="token punctuation">&lt;</span>ChildBookItem<span class="token punctuation">&gt;</span></span> childBookItems<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span> bookList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>             ChildBookItem item<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">ChildBookItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             item<span class="token punctuation">.</span><span class="token function">setBookName</span><span class="token punctuation">(</span>bookList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             childBookItems<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>         mList<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>mSelectedPosition<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> childBookItems<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 添加子item</span>         CategoryItem categoryItem<span class="token operator">=</span><span class="token punctuation">(</span>CategoryItem<span class="token punctuation">)</span> mList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>mSelectedPosition<span class="token punctuation">)</span><span class="token punctuation">;</span>         categoryItem<span class="token punctuation">.</span><span class="token function">setChildBookItems</span><span class="token punctuation">(</span>childBookItems<span class="token punctuation">)</span><span class="token punctuation">;</span>         mAdapter<span class="token punctuation">.</span><span class="token function">notifyDataSetChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <p>若此时点击最后一个父item，可看到mList中前三条数据为CategoryItem类型；后五条数据为ChildBookItem类型，并与第三条CategoryItem的子item列表内容相同。<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220722/40efef494c349f37c56495e550ff47a0.jpg" alt="RecyclerView单层RecyclerView实现点击展开、折叠效果"></p> <h4>3.2 折叠子item</h4> <blockquote> <p>mList.removeAll(item.getChildBookItems())： 由于之前展开item的时候已经设置好了CategoryItem与ChildBookItem之间的对应关系，所以可通过此行代码直接从mList中删除子item。</p> </blockquote> <pre><code class="prism language-java"><span class="token keyword">private</span><span class="token keyword">void</span><span class="token function">removeChildItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         CategoryItem item<span class="token operator">=</span><span class="token punctuation">(</span>CategoryItem<span class="token punctuation">)</span>mList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>mSelectedPosition<span class="token punctuation">)</span><span class="token punctuation">;</span>         mList<span class="token punctuation">.</span><span class="token function">removeAll</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">getChildBookItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         item<span class="token punctuation">.</span><span class="token function">setChildBookItems</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token class-name">ArrayList</span><span class="token generics function"><span class="token punctuation">&lt;</span>ChildBookItem<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         mAdapter<span class="token punctuation">.</span><span class="token function">notifyDataSetChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <h2>4 demo下载</h2> <p>可在这里下载单层RecyclerView实现点击展开、折叠效果的demo</p> </div> 			                </div>
                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-108781.htm">【PyTorch】Input type (torch.cuda.FloatTensor) and weight type (torch.FloatTensor) should be the same</a></p>
                                        <p>下一个：<a href="/news/article-109603.htm">你不知道的Python容器</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-4-2-clash-v2ray-ss-ssr.htm" title="「4月2日」最高速度22.6M/S，2025年NekoBox每天更新免费节点订阅链接">「4月2日」最高速度22.6M/S，2025年NekoBox每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-86699.htm" title="动物医院有哪些职位 动物医院有哪些职位名称">动物医院有哪些职位 动物医院有哪些职位名称</a></li>
                        <li class="py-2"><a href="/news/article-104230.htm" title="动物诊疗许可证办理流程视频教程（动物诊疗许可证申请条件）">动物诊疗许可证办理流程视频教程（动物诊疗许可证申请条件）</a></li>
                        <li class="py-2"><a href="/news/article-96335.htm" title="中国农大动物医院怎么样啊好吗（中国农大动物医院怎么样啊好吗多少钱）">中国农大动物医院怎么样啊好吗（中国农大动物医院怎么样啊好吗多少钱）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-5-1-clash-v2ray-ss-ssr.htm" title="「5月1日」最高速度18.4M/S，2025年NekoBox每天更新免费节点订阅链接">「5月1日」最高速度18.4M/S，2025年NekoBox每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-85988.htm" title="按值致电与按引用致电之间的区别">按值致电与按引用致电之间的区别</a></li>
                        <li class="py-2"><a href="/news/article-88856.htm" title="远程访问服务器Jupyter Notebook (浏览器访问和pycharm访问)">远程访问服务器Jupyter Notebook (浏览器访问和pycharm访问)</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-3-free-subscribe-node.htm" title="「4月3日」最高速度21.2M/S，2025年NekoBox每天更新免费节点订阅链接">「4月3日」最高速度21.2M/S，2025年NekoBox每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-93917.htm" title="猫粮狗粮生产加工（猫粮狗粮生产加工工艺）">猫粮狗粮生产加工（猫粮狗粮生产加工工艺）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-4-free-node-subscribe-links.htm" title="「4月4日」最高速度22.6M/S，2025年NekoBox每天更新免费节点订阅链接">「4月4日」最高速度22.6M/S，2025年NekoBox每天更新免费节点订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">12</span> <a href="/date/2025-05/" title="2025-05 归档">2025-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">87</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                    </ul>
    </div>
</div>



                </div>
            </div>
        </div>
    </div>
    <!-- About End -->



        <!-- Footer Start -->
    <div class="container-fluid bg-dark text-white-50 footer pt-5">
        <div class="container wow fadeIn" data-wow-delay="0.1s">
            <div class="copyright">
                <div class="row">
                    <div class="col-md-6 text-center text-md-start mb-3 mb-md-0">
                                            <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                        NekoBoxNode官网节点站 版权所有
                        <br />
                        Powered by WordPress
                    </div>
                    <div class="col-md-6 text-center text-md-end">
                        <div class="footer-menu">
                            <a href="/">Home</a>
                            <a href="#">Cookies</a>
                            <a href="#">Help</a>
                            <a href="#">FAQs</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Footer End -->


    <!-- Back to Top -->
    <a href="#" class="btn btn-lg btn-primary btn-lg-square back-to-top pt-2"><i class="bi bi-arrow-up"></i></a>


    <!-- JavaScript Libraries -->
    <script src="https://cdn.bootcdn.net/ajax/libs/jquery/3.6.1/jquery.min.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/5.0.0/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/nekoboxnode/lib/wow/wow.min.js"></script>
    <script src="/assets/website/js/frontend/nekoboxnode/lib/easing/easing.min.js"></script>
    <script src="/assets/website/js/frontend/nekoboxnode/lib/waypoints/waypoints.min.js"></script>
    <script src="/assets/website/js/frontend/nekoboxnode/lib/counterup/counterup.min.js"></script>
    <script src="/assets/website/js/frontend/nekoboxnode/lib/owlcarousel/owl.carousel.min.js"></script>

    <!-- Template Javascript -->
    <script src="/assets/website/js/frontend/nekoboxnode/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>